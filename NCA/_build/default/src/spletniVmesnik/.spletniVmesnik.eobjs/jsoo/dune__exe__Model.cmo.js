// Generated by js_of_ocaml
//# buildInfo:effects=false, kind=cmo, use-js-string=true, version=5.4.0

//# unitInfo: Provides: Dune__exe__Model
//# unitInfo: Requires: Definicije__Avtomat, Definicije__Trak, Definicije__ZagnaniAvtomat, Dune__exe__Vektor, Stdlib__list
(function
  (globalThis){
   "use strict";
   var runtime = globalThis.jsoo_runtime;
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   function caml_call3(f, a0, a1, a2){
    return (f.l >= 0 ? f.l : f.l = f.length) == 3
            ? f(a0, a1, a2)
            : runtime.caml_call_gen(f, [a0, a1, a2]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    Definicije_ZagnaniAvtomat = global_data.Definicije__ZagnaniAvtomat,
    Stdlib_list = global_data.Stdlib__list,
    Definicije_Trak = global_data.Definicije__Trak,
    Definicije_Avtomat = global_data.Definicije__Avtomat,
    Dune_exe_Vektor = global_data.Dune__exe__Vektor;
   function init(sirina, visina, avtomat){
    var
     _h_ = caml_call1(Definicije_Avtomat[7], avtomat),
     _i_ = caml_call1(Stdlib_list[1], _h_),
     _j_ = caml_call3(Dune_exe_Vektor[8], _i_, sirina, visina),
     _k_ = caml_call1(Definicije_Avtomat[7], avtomat),
     polozaji = caml_call2(Stdlib_list[52], _k_, _j_);
    return [0,
            caml_call2
             (Definicije_ZagnaniAvtomat[1], avtomat, Definicije_Trak[1]),
            polozaji,
            0,
            sirina,
            visina];
   }
   function polozaj_stanja(model, q){
    return caml_call2(Stdlib_list[43], q, model[2]);
   }
   function update(model, param){
    if(typeof param === "number")
     switch(param){
       case 0:
        var match = caml_call1(Definicije_ZagnaniAvtomat[5], model[1]);
        if(! match) return model;
        var avtomat = match[1];
        return [0, avtomat, model[2], model[3], model[4], model[5]];
       case 1:
        return [0, model[1], model[2], 0, model[4], model[5]];
       default: return [0, model[1], model[2], 1, model[4], model[5]];
     }
    switch(param[0]){
      case 0:
       var q = param[1];
       return [0, model[1], model[2], [0, q], model[4], model[5]];
      case 1:
       var position = param[1], match$0 = model[3];
       if(typeof match$0 === "number") return model;
       var
        q$0 = match$0[1],
        _a_ = model[2],
        _b_ =
          function(param){
           var
            position$0 = param[2],
            q = param[1],
            position$1 = runtime.caml_equal(q$0, q) ? position : position$0;
           return [0, q, position$1];
          },
        polozaji = caml_call2(Stdlib_list[17], _b_, _a_);
       return [0, model[1], polozaji, model[3], model[4], model[5]];
      default:
       var
        vneseni_niz = param[1],
        _c_ = model[5],
        _d_ = model[4],
        _e_ = model[2],
        _f_ = caml_call1(Definicije_Trak[5], vneseni_niz),
        _g_ = caml_call1(Definicije_ZagnaniAvtomat[2], model[1]);
       return [0,
               caml_call2(Definicije_ZagnaniAvtomat[1], _g_, _f_),
               _e_,
               0,
               _d_,
               _c_];
    }
   }
   var Dune_exe_Model = [0, init, polozaj_stanja, update];
   runtime.caml_register_global(5, Dune_exe_Model, "Dune__exe__Model");
   return;
  }
  (globalThis));

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLjAsImZpbGUiOiIuc3BsZXRuaVZtZXNuaWsuZW9ianMvanNvby9kdW5lX19leGVfX01vZGVsLmNtby5qcyIsInNvdXJjZVJvb3QiOiIiLCJuYW1lcyI6WyJpbml0Iiwic2lyaW5hIiwidmlzaW5hIiwiYXZ0b21hdCIsInBvbG96YWppIiwicG9sb3phal9zdGFuamEiLCJtb2RlbCIsInEiLCJ1cGRhdGUiLCJwb3NpdGlvbiIsInEkMCIsInBvc2l0aW9uJDAiLCJwb3NpdGlvbiQxIiwidm5lc2VuaV9uaXoiXSwic291cmNlcyI6WyIvd29ya3NwYWNlX3Jvb3Qvc3JjL3NwbGV0bmlWbWVzbmlrL21vZGVsLm1sIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Rzs7Ozs7Rzs7Ozs7Rzs7Ozs7Ozs7Ozs7O1lBWUlBLEtBQUtDLFFBQU9DLFFBQU9DO0lBQ3JCO0tBRWlCLE1BQUEsa0NBSElBO0tBR2pCLE1BQUE7S0FERixNQUFBLG9DQUZLRixRQUFPQztLQUtJLE1BQUEsa0NBTEdDO0tBQ2pCQyxXQUNGO0lBS0Y7WUFDWTs0Q0FSU0Q7WUFDakJDOztZQURHSDtZQUFPQztHQWFiO1lBVUNHLGVBQWVDLE9BQU1DO0lBQUksbUNBQUpBLEdBQU5EO0dBQXFDO1lBRXBERSxPQUFPRjtJOzs7UUFFQyxZQUFBLHlDQUZEQTtvQkFHSyxPQUhMQTtZQUlFSDtRQUFZLFdBQVpBLFNBSkZHLFVBQUFBLFVBQUFBLFVBQUFBOztRQWlCaUIsV0FqQmpCQSxVQUFBQSxhQUFBQSxVQUFBQTtnQkFrQlUsV0FsQlZBLFVBQUFBLGFBQUFBLFVBQUFBOzs7O1dBS2FDO09BQUssV0FMbEJELFVBQUFBLGNBS2FDLElBTGJELFVBQUFBOztPQU1zQixJQUFaRyxxQkFBWSxVQU50Qkg7dUNBZ0JFLE9BaEJGQTtPQVNEO1FBRGlCSTtRQUNqQixNQVRDSjs7O1dBV0c7WUFBVUs7WUFBSko7WUFMQ0ssYUFNRyxtQkFKR0YsS0FHUEgsS0FMQ0UsV0FLR0U7V0FDUixXQURJSixHQUxDSztVQU13QztRQUgvQ1IsV0FDRjtPQUtGLFdBZkNFLFVBU0dGLFVBVEhFLFVBQUFBLFVBQUFBOztPQXlCQztRQU5DTztjQW5CRlA7Y0FBQUE7Y0FBQUE7UUF5QkMsTUFBQSwrQkFOQ087UUFLRCxNQUFBLHlDQXhCRFA7T0FvQkw7ZUFHSTs7Ozs7Ozs0QkFoRE5OLE1BdUJBSyxnQkFFQUc7OztFIiwic291cmNlc0NvbnRlbnQiOlsib3BlbiBEZWZpbmljaWplXG5cbnR5cGUgbmFjaW4gPSBQcml2emV0TmFjaW4gfCBWbmFzYW5qZU5pemEgfCBQcmVtaWthbmplVm96bGlzY2Egb2YgU3RhbmplLnRcblxudHlwZSBtb2RlbCA9IHtcbiAgYXZ0b21hdCA6IFphZ25hbmlBdnRvbWF0LnQ7XG4gIHBvbG96YWppIDogKFN0YW5qZS50ICogVmVrdG9yLnQpIGxpc3Q7XG4gIG5hY2luIDogbmFjaW47XG4gIHNpcmluYSA6IGZsb2F0O1xuICB2aXNpbmEgOiBmbG9hdDtcbn1cblxubGV0IGluaXQgc2lyaW5hIHZpc2luYSBhdnRvbWF0ID1cbiAgbGV0IHBvbG96YWppID1cbiAgICBWZWt0b3Iua29yZW5pX2Vub3RlXG4gICAgICAoTGlzdC5sZW5ndGggKEF2dG9tYXQuc2V6bmFtX3N0YW5qIGF2dG9tYXQpKVxuICAgICAgc2lyaW5hIHZpc2luYVxuICAgIHw+IExpc3QuY29tYmluZSAoQXZ0b21hdC5zZXpuYW1fc3RhbmogYXZ0b21hdClcbiAgaW5cbiAge1xuICAgIGF2dG9tYXQgPSBaYWduYW5pQXZ0b21hdC5wb3plbmkgYXZ0b21hdCBUcmFrLnByYXplbjtcbiAgICBwb2xvemFqaTtcbiAgICBuYWNpbiA9IFByaXZ6ZXROYWNpbjtcbiAgICBzaXJpbmE7XG4gICAgdmlzaW5hO1xuICB9XG5cbnR5cGUgbXNnID1cbiAgfCBQcmViZXJpTmFzbGVkbmppWm5ha1xuICB8IFphY25pUHJlbWlrVm96bGlzY2Egb2YgU3RhbmplLnRcbiAgfCBQcmVtYWtuaVZvemxpc2NlIG9mIFZla3Rvci50XG4gIHwgS29uY2FqUHJlbWlrVm96bGlzY2FcbiAgfCBaYWNuaVZub3NOaXphXG4gIHwgVm5lc2lOaXogb2Ygc3RyaW5nXG5cbmxldCBwb2xvemFqX3N0YW5qYSBtb2RlbCBxID0gTGlzdC5hc3NvYyBxIG1vZGVsLnBvbG96YWppXG5cbmxldCB1cGRhdGUgbW9kZWwgPSBmdW5jdGlvblxuICB8IFByZWJlcmlOYXNsZWRuamlabmFrIC0+IChcbiAgICAgIG1hdGNoIFphZ25hbmlBdnRvbWF0LmtvcmFrX25hcHJlaiBtb2RlbC5hdnRvbWF0IHdpdGhcbiAgICAgIHwgTm9uZSAtPiBtb2RlbFxuICAgICAgfCBTb21lIGF2dG9tYXQnIC0+IHsgbW9kZWwgd2l0aCBhdnRvbWF0ID0gYXZ0b21hdCcgfSlcbiAgfCBaYWNuaVByZW1pa1Zvemxpc2NhIHEgLT4geyBtb2RlbCB3aXRoIG5hY2luID0gUHJlbWlrYW5qZVZvemxpc2NhIHEgfVxuICB8IFByZW1ha25pVm96bGlzY2UgcG9zaXRpb24gLT4gKFxuICAgICAgbWF0Y2ggbW9kZWwubmFjaW4gd2l0aFxuICAgICAgfCBQcmVtaWthbmplVm96bGlzY2EgcSAtPlxuICAgICAgICAgIGxldCBwb2xvemFqaSA9XG4gICAgICAgICAgICBMaXN0Lm1hcFxuICAgICAgICAgICAgICAoZnVuIChxJywgcG9zaXRpb24nKSAtPlxuICAgICAgICAgICAgICAgIChxJywgaWYgcSA9IHEnIHRoZW4gcG9zaXRpb24gZWxzZSBwb3NpdGlvbicpKVxuICAgICAgICAgICAgICBtb2RlbC5wb2xvemFqaVxuICAgICAgICAgIGluXG4gICAgICAgICAgeyBtb2RlbCB3aXRoIHBvbG96YWppIH1cbiAgICAgIHwgXyAtPiBtb2RlbClcbiAgfCBLb25jYWpQcmVtaWtWb3psaXNjYSAtPiB7IG1vZGVsIHdpdGggbmFjaW4gPSBQcml2emV0TmFjaW4gfVxuICB8IFphY25pVm5vc05pemEgLT4geyBtb2RlbCB3aXRoIG5hY2luID0gVm5hc2FuamVOaXphIH1cbiAgfCBWbmVzaU5peiB2bmVzZW5pX25peiAtPlxuICAgICAge1xuICAgICAgICBtb2RlbCB3aXRoXG4gICAgICAgIGF2dG9tYXQgPVxuICAgICAgICAgIFphZ25hbmlBdnRvbWF0LnBvemVuaVxuICAgICAgICAgICAgKFphZ25hbmlBdnRvbWF0LmF2dG9tYXQgbW9kZWwuYXZ0b21hdClcbiAgICAgICAgICAgIChUcmFrLml6X25pemEgdm5lc2VuaV9uaXopO1xuICAgICAgICBuYWNpbiA9IFByaXZ6ZXROYWNpbjtcbiAgICAgIH1cbiJdfQ==
